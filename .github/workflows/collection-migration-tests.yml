name: Collection migration smoke test suite

on:
  push:
  pull_request:
  schedule:
  # https://crontab.guru/#53_*/4_*_*_*
  - cron: 53 */4 * * *  # At minute 53 past every 4th hour.

jobs:
  migrate-collections:
    name: Smoke-test migration
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
        migration-scenario:
        - minimal
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install migration script deps
      run: python -m pip install -r requirements.in -c requirements.txt
    - name: Install Ansible==devel
      run: python -m pip install git+https://github.com/ansible/ansible.git@devel
    - name: Configure user settings in Git
      run: |
        git config --global user.email "ansible_migration@example.com"
        git config --global user.name "Poor B"
    - name: >-
        Run migration scenario ${{ matrix.migration-scenario }}
      run: >-
        python -m
        migrate
        -m
        -s "scenarios/${{ matrix.migration-scenario }}"
        --skip-publish
    - name: >-
        Auto-publish the migrated collection repos to GitHub repos
      if: >-
        github.event_name != 'pull_request'
        && github.repository == 'ansible-community/collection_migration'
      env:
        GITHUB_APP_IDENTIFIER: 41435
        GITHUB_PRIVATE_KEY: ${{ secrets.GITHUB_PRIVATE_KEY }}
      run: >-
        python -m
        migrate
        -s "scenarios/${{ matrix.migration-scenario }}"
        --target-github-org ansible-collection-migration
        --skip-migration
        --publish-to-github
    - name: >-
        Auto-publish ansible-minimal to GitHub repos
      if: >-
        github.event_name != 'pull_request'
        && github.repository == 'ansible-community/collection_migration'
      env:
        GITHUB_APP_IDENTIFIER: 41435
        GITHUB_PRIVATE_KEY: ${{ secrets.GITHUB_PRIVATE_KEY }}
      run: >-
        python -m
        migrate
        -s "scenarios/${{ matrix.migration-scenario }}"
        --target-github-org ansible-collection-migration
        --skip-migration
        --push-migrated-core
    - name: Smoke test ansible-minimal
      if: >-
        github.event_name != 'pull_request'
        && github.repository == 'ansible-community/collection_migration'
      run: |
        python -m venv /tmp/ansible-minimal-venv
        source /tmp/ansible-minimal-venv/bin/activate
        pip install git+https://github.com/ansible-collection-migration/ansible-minimal
        ansible --help
        ansible --version
        deactivate
        rm -rf /tmp/ansible-minimal-venv
    - name: >-
        List the migrated collections
      run: |
          ls -Ral .cache/collections/
    - name: >-
        Generate tarballs out of migrated collections, one by one
      run: |
          for coll_dir in `ls .cache/collections/*/*/* -d`
          do
              (
                  echo "Generating an artifact for ${coll_dir}..."
                  cd "${coll_dir}"
                  pwd
                  ansible-galaxy collection build --output-path "${GITHUB_WORKSPACE}/.cache/collection-tarballs"
              )
          done
    - name: Store migrated collection artifacts
      uses: actions/upload-artifact@v1
      with:
        name: >-
          migrated-collections-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.migration-scenario }}
        path: .cache/collection-tarballs

  sanity-test-collections:
    name: Run sanity tests in collections
    needs:
    - migrate-collections
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
        migration-scenario:
        - minimal
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install Ansible==devel
      run: >-
        python -m pip install git+https://github.com/ansible/ansible.git@devel
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          migrated-collections-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.migration-scenario }}
        path: .cache/collection-tarballs
    - name: >-
        Install the migrated collections
      run: |
          ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz
    - name: >-
        List the migrated collections
      run: |
          ls -Ral ~/.ansible/collections/
    - name: >-
        [NON-FAILING]
        Run sanity tests against all migrated collections, one by one
      run: |
          for coll_dir in `ls ~/.ansible/collections/*/*/* -d`
          do
              (
                  echo "Sanity-testing ${coll_dir}..."
                  cd "${coll_dir}"
                  pwd
                  ansible-test sanity --requirements --python "${{ matrix.python-version }}" -vvv || :
              )
          done

  unit-test-collections:
    name: Run unit tests in collections
    needs:
    - migrate-collections
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
        migration-scenario:
        - minimal
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install Ansible==devel
      run: >-
        python -m pip install git+https://github.com/ansible/ansible.git@devel
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          migrated-collections-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.migration-scenario }}
        path: .cache/collection-tarballs
    - name: >-
        Install the migrated collections
      run: |
          ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz
    - name: >-
        List the migrated collections
      run: |
          ls -Ral ~/.ansible/collections/
    - name: >-
        [NON-FAILING]
        Run unit tests against all migrated collections, one by one
      run: |
          for coll_dir in `ls ~/.ansible/collections/*/*/* -d`
          do
              (
                  echo "Unit-testing ${coll_dir}..."
                  cd "${coll_dir}"
                  pwd
                  [[ ! -d "tests/unit" ]] && echo This collection does not have unit tests. Skipping... && continue
                  ansible-test units --requirements --python "${{ matrix.python-version }}" -vvv || :
              )
          done
